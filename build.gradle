import org.opensearch.gradle.test.RestIntegTestTask

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'opensearch.opensearchplugin'
apply plugin: 'opensearch.yaml-rest-test'
apply plugin: 'opensearch.pluginzip'
apply plugin: 'opensearch.java-agent'

def pluginName = 'opensearch-result-formatting'
def pluginDescription = 'OpenSearch plugin for custom result formatting (Array and FHIR Bundle)'
def packagePath = 'org.opensearch.plugin'
def pathToPlugin = 'rs'
def pluginClassName = 'PluginRegistration'
group = "ResultFormattingGroup"
version = "1.0.0"

java {
    targetCompatibility = JavaVersion.VERSION_21
    sourceCompatibility = JavaVersion.VERSION_21
}



publishing {
    publications {
        pluginZip(MavenPublication) { publication ->
            pom {
              name = pluginName
              description = pluginDescription
              licenses {
                license {
                  name = "The Apache License, Version 2.0"
                  url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                }
              }
              developers {
                developer {
                  name = "OpenSearch"
                  url = "https://github.com/opensearch-project/opensearch-plugin-template-java"
                }
              }
            }
        }
    }
}

opensearchplugin {
    name pluginName
    description pluginDescription
    classname "${packagePath}.${pathToPlugin}.${pluginClassName}"
    licenseFile rootProject.file('LICENSE.txt')
    noticeFile rootProject.file('NOTICE.txt')
}

// This requires an additional Jar not published as part of build-tools
loggerUsageCheck.enabled = false

// No need to validate pom, as we do not upload to maven/sonatype
validateNebulaPom.enabled = false

// Disable dependency license check for now
dependencyLicenses.enabled = false

buildscript {
    ext {
        opensearch_version = System.getProperty("opensearch.version", "3.2.0-SNAPSHOT")
    }

    repositories {
        flatDir { dirs("libs") }
        mavenLocal()
        maven { url "https://central.sonatype.com/repository/maven-snapshots/" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.opensearch.gradle:build-tools:${opensearch_version}"
    }
}

repositories {
    flatDir { dirs("libs") }
    mavenLocal()
    maven { url "https://central.sonatype.com/repository/maven-snapshots/" }
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    implementation 'org.json:json:20240303'
    // Add JetBrains annotations if needed
    compileOnly 'org.jetbrains:annotations:26.0.2-1'
}

// updateVersion: Task to auto update version to the next development iteration
task updateVersion {
    onlyIf { System.getProperty('newVersion') }
    doLast {
        ext.newVersion = System.getProperty('newVersion')
        println "Setting version to ${newVersion}."
         // String tokenization to support -SNAPSHOT
        ant.replaceregexp(file:'build.gradle', match: '"opensearch.version", "\\d.*"', replace: '"opensearch.version", "' + newVersion.tokenize('-')[0] + '-SNAPSHOT"', flags:'g', byline:true)
    }
}

